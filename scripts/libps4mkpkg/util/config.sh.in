#!/bin/bash
#
#   config.sh - functions for handling ps4mkpkg config files
#
#   Copyright (c) 2006-2025 Pacman Development Team <pacman-dev@lists.archlinux.org>
#   Copyright (c) 2002-2006 by Judd Vinet <jvinet@zeroflux.org>
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

[[ -n "$LIBPS4MKPKG_UTIL_CONFIG_SH" ]] && return
LIBPS4MKPKG_UTIL_CONFIG_SH=1

PS4MKPKG_LIBRARY=${PS4MKPKG_LIBRARY:-'@libps4mkpkgdir@'}

source "$PS4MKPKG_LIBRARY/util/error.sh"
source "$PS4MKPKG_LIBRARY/util/message.sh"
source "$PS4MKPKG_LIBRARY/util/util.sh"

# correctly source ps4mkpkg.conf, respecting user precedence and the system conf
source_makepkg_config() {
	# $1: override system config file

	local PS4MKPKG_CONF=${1:-${PS4MKPKG_CONF:-@sysconfdir@/ps4mkpkg.conf}}

	# Source the config file; fail if it is not found
	if [[ -r $PS4MKPKG_CONF ]]; then
		source_safe "$PS4MKPKG_CONF"
		if [[ -d "$PS4MKPKG_CONF.d" ]] && compgen -G "$PS4MKPKG_CONF.d"/'*.conf' > /dev/null; then
			for c in "$PS4MKPKG_CONF.d"/*.conf; do
				source_safe $c
			done
		fi
	else
		error "$(gettext "%s not found.")" "$PS4MKPKG_CONF"
		plainerr "$(gettext "Aborting...")"
		exit $E_CONFIG_ERROR
	fi

	# Source user-specific ps4mkpkg.conf overrides, but only if no override config
	# file was specified
	XDG_PS4_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/ps4"
	if [[ $PS4MKPKG_CONF = "@sysconfdir@/ps4mkpkg.conf" ]]; then
		if [[ -r $XDG_PS4_DIR/ps4mkpkg.conf ]]; then
			source_safe "$XDG_PS4_DIR/ps4mkpkg.conf"
		elif [[ -r $HOME/.ps4mkpkg.conf ]]; then
			source_safe "$HOME/.ps4mkpkg.conf"
		fi
	fi
}

# load ps4mkpkg.conf by sourcing the configuration files, and preserving
# existing environment settings
load_makepkg_config() {
	# $1: override system config file

	local PS4MKPKG_CONF=${1:-${PS4MKPKG_CONF:-@sysconfdir@/ps4mkpkg.conf}}

	# preserve environment variables to override ps4mkpkg.conf
	local restore_envvars=$(
		for var in PKGDEST SRCDEST SRCPKGDEST LOGDEST BUILDDIR PKGEXT SRCEXT GPGKEY PACKAGER CARCH; do
			# the output of 'declare -p' results in locally scoped values when used within a function
			[[ -v $var ]] && printf '%s=%s\n' "$var" "${!var@Q}"
		done
	)

	source_ps4mkpkg_config "$PS4MKPKG_CONF"

	# prevent altering these directly
	readonly -a BUILDENV OPTIONS

	eval "$restore_envvars"
}
